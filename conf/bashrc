# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

#### CONSTANTS ####
  FG_RED=$(tput setaf 1)
  FG_GREEN=$(tput setaf 2)
  FG_YELLOW=$(tput setaf 3)
  FG_BLUE=$(tput setaf 4)
  FG_PURPLE=$(tput setaf 5)
  FG_CYAN=$(tput setaf 6)
  FG_WHITE=$(tput setaf 7)
  FG_DIM=$(tput dim)
  FG_BOLD=$(tput bold)
  FG_REVERSE=$(tput rev)
  FG_STANDOUT=$(tput smso)
  FG_RESET=$(tput sgr0)
  BG_RED=$(tput setab 1)
  BG_GREEN=$(tput setab 2)
  BG_YELLOW=$(tput setab 3)
  BG_BLUE=$(tput setab 4)
  BG_PURPLE=$(tput setab 5)
  BG_CYAN=$(tput setab 6)
  BG_WHITE=$(tput setab 7)
#### /CONSTANTS ####



#### ALIASES ####
    # Fix common typos
    alias cd..="cd .."
    alias cd-="cd -"
    
    alias ip="ifconfig | grep -o \"inet [^ ]*\" | grep -v \"127.0.0.1\""
    # Make our ls command show useful info (with colors)
    alias ls='ls -lGFh'
    # also modify our color scheme for ls here (for OS X)
    export LSCOLORS=dxfxcxdxbxegedabagaccx

    # Shortcuts for OS X commands (clear system log and flush dns when network acts up)
    alias clearlog='sudo rm -rf /private/var/log/asl/*.asl'
    alias flushdns='dscacheutil -flushcache'

    # Start a simple web server with Python (for sharing files or testing HTML/Javascript apps locally without the need for Apache)
    alias www='python -m SimpleHTTPServer'
    # Generate documentation from JSDoc commands in Javascript files

    # Set some shortcut aliases for Git commands
    alias gitst="git status"
    alias gitad="git add"
    alias gitco="git commit -m"
    alias gitre="git rebase"
    alias gitch="git checkout"
    alias gitpus="git push origin"
    alias gitpul="git pull origin"
#### /ALIASES ####

#### LOAD RVM ####
    [[ -s "~/.rvm/scripts/rvm" ]] && source "~/.rvm/scripts/rvm"  # This loads RVM into a shell session.
#### /LOAD RVM ####

#### PARSE GIT BRANCH AND CLEANLINESS ####
    function parse_git_branch {
      local status=$(git status)
      local branch=$(echo $status | grep "On branch" | awk '{print $4}')
      if [ $(echo $status | grep -c "working directory clean") -gt 0 ]; then
        echo "$FG_GREEN $FG_DIM$FG_STANDOUT[$branch : Clean]"
      else
        if [ "$branch" -ne "" ]; then
          echo "$FG_RED $FG_STANDOUT[$branch : Dirty]"
        fi
      fi
    }

    # modify prompt
    export PS1='$FG_WHITE[\@]  $FG_PURPLE\w\e  $(parse_git_branch)$FG_RESET\n'
#### /PARSE GIT BRANCH ####

